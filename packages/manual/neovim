#!/usr/bin/env bash

# Install Neovim `VERSION` into `PREFIX`.

# Get Helper Functions #########################################################

source "$DOTFILES/_helpers/general"

# Set repository name ##########################################################

REPO="neovim/neovim"

# Ensure PREFIX and VERSION are set ############################################

PREFIX="${PREFIX:-/usr/local/}"
VERSION="${VERSION:-latest}"

info "Attempting to install neovim@$VERSION into $PREFIX..."

# Get System Info ##############################################################

OS=$(uname -s)
ARCH=$(uname -m)

# Establish name of release asset ##############################################

case $OS in
Darwin) OS="macos" ;;
Linux) OS="linux" ;;
esac

case $ARCH in
arm64 | aarch64) ARCH="arm64" ;;
x86_64) ARCH="x86_64" ;;
*)
  error "Neovim does not support this CPU architecture: $ARCH"
  exit 1
  ;;
esac

NAME="nvim-$OS-$ARCH"
EXT="tar.gz"

# Prepare temporary directory ##################################################

TMP=$(mktemp -d)

cleanup() {
  info "Cleaning up"
  rm -rf "$TMP"
}

trap cleanup EXIT

# Download release asset from GitHub ###########################################

info "TMP:      $TMP"
info "REPO:     $REPO"
info "VERSION:  $VERSION"
info "NAME:     $NAME"
info "EXT:      $EXT"

if ! download_from_github "$TMP" "$REPO" "$VERSION" "$NAME" "$EXT"; then
  error "Failed to download and extract Neovim tarball from GitHub"
  exit 1
fi

# Install ######################################################################

sudo mkdir -p "$PREFIX"/{bin,lib,share} || exit
sudo cp -r "$TMP/$NAME"/{bin,lib,share} "$PREFIX" || exit

success "Installed Neovim successfully"
